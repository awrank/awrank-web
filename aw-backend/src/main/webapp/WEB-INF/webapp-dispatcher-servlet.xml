<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven/>

    <!-- todo: what does it do? -->
    <context:annotation-config/>

    <!-- Scan a package for controllers -->
    <context:component-scan base-package="com.awrank"/>

    <!-- Maps '/' requests to the 'home' view -->
    <!--<mvc:view-controller path="/" view-name="home"/>-->

    <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
    <!--<mvc:resources mapping="/resources/**" location="/resources/"/>-->
    <!--<mvc:resources mapping="/js/**" location="/js/"/>-->
    <!--<mvc:resources mapping="/pages/**" location="/pages/"/>-->

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/jsp/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!-- properties on the same level as resources - shall not be accessible via /root in any case-->
    <!--<util:properties id="emailProps" location="/WEB-INF/properties/email.properties" />-->

    <!-- Property placeholder configurer -->
    <context:property-placeholder location="/WEB-INF/properties/email.properties"/>
    <context:property-placeholder location="/WEB-INF/properties/application.properties"/>

    <!--<bean id="messageSource"-->
          <!--class="org.springframework.context.support.ResourceBundleMessageSource">-->
        <!--<property name="basenames" value="resources/messages"/>-->
    <!--</bean>-->

    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="AwrankEMF"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

<!-- REST -->

    <!-- bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />

    <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
        <property name="contentType" value="text/plain"/>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>
   
  <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
    	<property name="prefixJson" value="true" />
    	<property name="supportedMediaTypes" value="application/json" />
    	<property name="objectMapper" ref="jacksonObjectMapper" />
	</bean>

 <bean id="jacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper" />
 	
<bean id="jacksonSerializationConfig" class="org.codehaus.jackson.map.SerializationConfig"
    factory-bean="jacksonObjectMapper" factory-method="getSerializationConfig" />
    
<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject" ref="jacksonSerializationConfig" />
        <property name="targetMethod" value="setSerializationInclusion" />
        <property name="arguments">
            <list>
                <value type="org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion">NON_DEFAULT</value>
            </list>
        </property>
    </bean>


<bean
    class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="order" value="2" />
    <property name="prefix" value="/WEB-INF/jsp/" />
    <property name="suffix" value=".jsp" />
</bean -->

    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--<bean id="emailService" class="com.awrank.web.model.service.sharing.ShareToServiceEmailImpl" />-->

    <bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
        <property name="supportedMediaTypes" value="application/json"/>
    </bean>

    <!-- social -->
    <!-- Google -->
    <!--<bean id="connectionFactoryLocator" class="org.springframework.social.connect.support.ConnectionFactoryRegistry">-->
        <!--<property name="connectionFactories">-->
            <!--<list>-->
                <!--<bean class="org.springframework.social.google.connect.GoogleConnectionFactory">-->
                    <!--<constructor-arg value="${google.clientId}" />-->
                    <!--<constructor-arg value="${google.clientSecret}" />-->
                <!--</bean>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->

</beans>