<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">

    <!-- Activates various annotations to be detected in bean classes: e.g. Spring's @Required, @Autowired, etc. -->
    <context:annotation-config/>

    <!-- Indicates that transaction configuration is defined by Java 5 annotations on bean classes -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- Scans the classpath for annotated components that will be auto-registered as Spring beans. -->
    <context:component-scan base-package="com.awrank">
        <context:include-filter type="annotation"
                                expression="org.springframework.context.annotation.Configuration"/>
    </context:component-scan>

    <!-- Property placeholder configurer -->
    <context:property-placeholder location="/WEB-INF/properties/email.properties"/>
    <context:property-placeholder location="/WEB-INF/properties/application.properties"/>

    <!-- Database -->
    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="AwrankEMF"/>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- Social Auth lib -->
    <bean id="socialAuthConfig" class="org.brickred.socialauth.SocialAuthConfig">
        <property name="applicationProperties">
            <props>
                <prop key="graph.facebook.com.consumer_key">${facebook.appId}</prop>
                <prop key="graph.facebook.com.consumer_secret">${facebook.appSecret}</prop>
            </props>
        </property>
    </bean>

    <bean id="socialAuthManager" class="org.brickred.socialauth.SocialAuthManager" scope="session">
        <property name="socialAuthConfig" ref="socialAuthConfig"/>
        <aop:scoped-proxy/>
    </bean>

    <bean id="socialAuthTemplate" class="org.brickred.socialauth.spring.bean.SocialAuthTemplate" scope="session">
        <property name="socialAuthManager" ref="socialAuthManager"/>
        <aop:scoped-proxy/>
    </bean>

    <bean id="socialAuthWebController" class="org.brickred.socialauth.spring.controller.SocialAuthWebController">
        <!--<constructor-arg value="http://opensource.brickred.com:8070/socialauth-spring-demo"/>-->
        <constructor-arg value="http://195.225.158.50:8000/aw"/>
        <constructor-arg value="/authSuccess"/>
        <constructor-arg value="/accessDenied"/>
    </bean>

</beans>